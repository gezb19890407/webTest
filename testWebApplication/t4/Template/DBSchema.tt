<#@ template debug="true" hostspecific="true" language="C#"  #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core"#>
<#@ import namespace="System"#>
<#@ import namespace="System.Collections.Generic"#>  

<#@ include file="DBSchema.ttinclude"#>
<#
    var dbSchema=DBSchemaFactory.GetDBSchema();
    //List<string> tableList=dbSchema.GetTablesList();
    //foreach(string tableName in tableList)
    //{
		string tableName = "baseAdministrativeDivision";
        Table table=dbSchema.GetTableMetadata(tableName);
#>
using System;
using System.Collections.Generic;
using System.Text;
using System.Runtime.Serialization;
using System.ComponentModel.DataAnnotations;
using testWebApplication.t4.Template;

namespace Project.Model
{
	/// <summary>
    /// <#=table.ColumnTypeNames#>
    /// </summary>
    [Serializable]
    public class <#=tableName#> : DtoBaseEntity
    {
        #region Constructor
        public <#=tableName#>() { }

        public <#=tableName#>(<#=table.ColumnTypeNames#>)
        {
<#
        foreach(Column c in table.Columns)
        {
#>
            this.<#=c.LowerColumnName#> = <#=c.LowerColumnName#>;
<#
        }
#>
        }
        #endregion

        #region Attributes
<#
        foreach(Column c in table.Columns)
        {
#>
        private <#=GeneratorHelper.GetQuesMarkByType(c.TypeName)#> <#=c.LowerColumnName#>;

		/// <summary>
		/// <#=c.UpColumnName#>
		/// <summary>
        public <#=GeneratorHelper.GetQuesMarkByType(c.TypeName)#> <#=c.UpColumnName#>
        {
            get { return <#=c.LowerColumnName#>; }
            set { <#=c.LowerColumnName#> = value; }
        }
<#
        }
#>
        #endregion

        #region check
        
        public override List<string> check()
        {    
			List<string> errorList = new List<string>();
            bool validatorResult = true;
<#
        foreach(Column c in table.Columns)
        {
            if(!c.AllowDBNull)
            {
                if(c.TypeName==GeneratorHelper.StringType)
                {
#>
            if (string.IsNullOrEmpty(this.<#=c.UpColumnName#>))
            {
                validatorResult = false;
                errorList.Add("<#=c.UpColumnName#>不能为空!");
            }
<#
                }
                if(c.TypeName==GeneratorHelper.DateTimeType)
                {
#>
            if (this.<#=c.UpColumnName#>==null)
            {
                validatorResult = false;
                errorList.Add("<#=c.UpColumnName#>不能为空！");
            }
<#
                }
            }
            if(c.TypeName==GeneratorHelper.StringType)
            {
#>
            if (this.<#=c.UpColumnName#> != null && <#=c.MaxLength#> < this.<#=c.UpColumnName#>.Length)
            {
                validatorResult = false;
                errorList.Add("<#=c.UpColumnName#>的长度不能大于<#=c.MaxLength#>！");
            }
<#
            }
        }
#>
            return errorList;
        }    
        #endregion
    }
}
<#
    //}
    dbSchema.Dispose();
#>